//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Api_Mantenimiento.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MantenimientoEntities : DbContext
    {
        public MantenimientoEntities()
            : base("name=MantenimientoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<cliente> cliente { get; set; }
        public virtual DbSet<departamento> departamento { get; set; }
    
        public virtual int crear_cliente(string nombre, string direccion, Nullable<int> id_departamento)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var id_departamentoParameter = id_departamento.HasValue ?
                new ObjectParameter("id_departamento", id_departamento) :
                new ObjectParameter("id_departamento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crear_cliente", nombreParameter, direccionParameter, id_departamentoParameter);
        }
    
        public virtual int eliminar_cliente(Nullable<int> id_cliente)
        {
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("eliminar_cliente", id_clienteParameter);
        }
    
        public virtual ObjectResult<listar_cliente_Result> listar_cliente()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listar_cliente_Result>("listar_cliente");
        }
    
        public virtual ObjectResult<listar_departamento_Result> listar_departamento()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listar_departamento_Result>("listar_departamento");
        }
    
        public virtual int modificar_cliente(Nullable<int> id_cliente, string nombre, string direccion, Nullable<int> id_departamento)
        {
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var id_departamentoParameter = id_departamento.HasValue ?
                new ObjectParameter("id_departamento", id_departamento) :
                new ObjectParameter("id_departamento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modificar_cliente", id_clienteParameter, nombreParameter, direccionParameter, id_departamentoParameter);
        }
    
        public virtual ObjectResult<listar_cliente_id_Result> listar_cliente_id(Nullable<int> id_cliente)
        {
            var id_clienteParameter = id_cliente.HasValue ?
                new ObjectParameter("id_cliente", id_cliente) :
                new ObjectParameter("id_cliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<listar_cliente_id_Result>("listar_cliente_id", id_clienteParameter);
        }
    }
}
